className,severity,filename,startLine,endLine,weight,guidelineWeight,name,isSnoozed
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/obfuscate/ArrayObfuscation/IntArraySplitter.java,424,586,134,8,"IntArraySplitter.finish_insert(InstructionList,int[],int,int,int,InstructionList,InstructionList,int)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,180,321,116,7,"ConditionGenerator.generatePAIRSEQUAL(Hashtable,VarValue[],int,Instruction[][],boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/obfuscate/ArrayObfuscation/IntArraySplitter.java,97,227,112,7,"IntArraySplitter.addDynaNewArr(byte,int,int,int,InstructionList,int[],ConstantPoolGen)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,576,709,109,10,"ConditionGenerator.generateISGTZERO(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,711,842,106,10,"ConditionGenerator.generateISLTZERO(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,374,502,104,10,"ConditionGenerator.generateISUNIQUESOFAR(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/Tracer.java,354,456,80,8,"Tracer.getSubroutine(int[],ReachingDefs,ConstantPoolGen,MethodCFG,InstructionFactory,String,Method,BasicBlock)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/util/exprtree/DependencyGraph.java,367,452,63,7,"DependencyGraph.adddependence(MutableGraph,MutableGraph,Node,HashMap,HashMap,boolean,int)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/util/newexprtree/DependencyGraph.java,362,443,58,7,"DependencyGraph.adddependence(MutableGraph,ExprTree,Node,HashMap,HashMap,boolean,int)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,915,982,53,10,"ConditionGenerator.generateISNEGINF(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,845,913,53,10,"ConditionGenerator.generateISPOSINF(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,505,573,52,10,"ConditionGenerator.generateISEVEN(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,1011,1067,45,13,"ConditionGenerator.generateISINTINRANGE(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List,boolean,int,int)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/MinimalSynthesizer.java,141,194,43,7,"MinimalSynthesizer.genNode(InstructionList,InstructionHandle[],Graph,Object[],Object,Object,Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/diff/methoddiff/CFGTree.java,196,248,43,7,"CFGTree.buildLists(int,Vector,Vector,LinkedList,LinkedList,CFGTree,CFGTree)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/PositiveIntSynthesizer.java,289,340,39,8,"PositiveIntSynthesizer.genNode(InstructionList,InstructionHandle[],short,Graph,BitSet[],Object,Object,Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/MinimalSynthesizer.java,235,277,31,7,"MinimalSynthesizer.genSwitch(InstructionList,InstructionHandle[],InstructionHandle,Graph,Object,Object,Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/util/graph/graphview/GraphPanel.java,456,488,30,7,"GraphPanel.computeEdgeStart(int,int,int,int,int,int,int)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/wizard/modeling/dfa/PostreqDFA.java,31,74,28,7,"PostreqDFA.isNonLoopEdge(Algorithm,Algorithm,Object,RequisiteProperty,ArrayList,ArrayList,ArrayList)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/PositiveIntSynthesizer.java,512,543,20,7,"PositiveIntSynthesizer.genIf(CodeContext,InstructionHandle[],Graph,BitSet,Object,Object,Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/execpath/ConditionGenerator.java,984,1009,19,10,"ConditionGenerator.generateISNULL(long[],long[],long[],VarValue[],int,Instruction[],ConstantPoolGen,boolean,List,List)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/util/newgraph/EditableGraphStyle.java,126,150,18,9,"EditableGraphStyle.$constructor(int,int,int,int,boolean,int,int,int,boolean)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/MinimalSynthesizer.java,203,228,17,8,"MinimalSynthesizer.genIfNE(InstructionList,InstructionHandle[],InstructionHandle,Graph,Object,Object,Object,Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/wizard/modeling/dfa/PostprohibitDFA.java,24,51,16,7,"PostprohibitDFA.isNonLoopEdge(Algorithm,Algorithm,Object,RequisiteProperty,ArrayList,ArrayList,ArrayList)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/wizard/modeling/dfa/PreprohibitDFA.java,33,60,16,7,"PreprohibitDFA.isNonLoopEdge(Algorithm,Algorithm,Object,RequisiteProperty,ArrayList,ArrayList,ArrayList)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/wizard/modeling/dfa/PrereqDFA.java,41,69,16,7,"PrereqDFA.isNonLoopEdge(Algorithm,Algorithm,Object,RequisiteProperty,ArrayList,ArrayList,ArrayList)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/analysis/controlflowgraph/PositiveIntSynthesizer.java,263,282,12,7,"PositiveIntSynthesizer.allNodes(InstructionList,InstructionHandle[],short,Graph,Object,BitSet[],Map)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/watermark/ct/encode/ir/Build.java,17,35,12,8,"Build.$constructor(MutableGraph,MutableGraph[],MutableGraph,List,List,List,List,GlobalStorage)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/util/newgraph/AbstractGraphStyle.java,23,36,11,8,"AbstractStyle.addNode(Object,int,int,int,int,boolean,String,String)",False
nl.sig.bettercodehub.dataaccess.datamodel.RefactoringFileCandidate,VERY_HIGH,src/sandmark/program/LocalMethod.java,35,50,9,7,"LocalMethod.makeMethod(Class,int,Type,Type[],String[],String,InstructionList)",False
